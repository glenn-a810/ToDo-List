{"version":3,"sources":["Components/TodoHead.js","Components/TodoItem.js","Components/TodoList.js","Components/TodoTemplet.js","App.js","reportWebVitals.js","index.js"],"names":["TodoheadBlock","styled","div","TodoHead","className","Remove","TodoItemBlock","CheckCircle","props","done","css","Text","TodoItem","id","text","TodoListBlock","TodoList","TodoTemplateBlock","TodoTemplate","children","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAIMA,EAAgBC,IAAOC,IAAV,0eAqCJC,I,YAAAA,EAVf,WACI,OACI,eAACH,EAAD,WACI,8DACA,qBAAKI,UAAU,MAAf,gCACA,qBAAKA,UAAU,YAAf,oD,OC5BNC,EAASJ,IAAOC,IAAV,4OAaNI,EAAgBL,IAAOC,IAAV,2MAMTG,GAMJE,EAAcN,IAAOC,IAAV,qRAWX,SAAAM,GAAK,OACHA,EAAMC,MAAQC,YAAd,4GAOFC,EAAOV,IAAOC,IAAV,8FAIJ,SAAAM,GAAK,OACHA,EAAMC,MAAQC,YAAd,oEAkBOE,I,EAAAA,EAZf,YAAoC,EAAjBC,GAAkB,IAAdJ,EAAa,EAAbA,KAAMK,EAAO,EAAPA,KACzB,OACI,eAACR,EAAD,WACI,cAACC,EAAD,CAAaE,KAAMA,EAAnB,SAA0BA,GAAQ,cAAC,IAAD,MAClC,cAACE,EAAD,CAAMF,KAAMA,EAAZ,SAAmBK,IACnB,cAACT,EAAD,UACI,cAAC,IAAD,UC/DVU,EAAgBd,IAAOC,IAAV,qHAoBJc,I,EAAAA,EAbf,WACI,OACI,eAACD,EAAD,WACI,cAAC,EAAD,CAAUD,KAAK,iEAAyBL,MAAM,IAC9C,cAAC,EAAD,CAAUK,KAAK,6DAAqBL,MAAM,IAC1C,cAAC,EAAD,CAAUK,KAAK,6DAAqBL,MAAM,IAC1C,cAAC,EAAD,CAAUK,KAAK,6DAAqBL,MAAM,IAC1C,cAAC,EAAD,CAAUK,KAAK,+DAAuBL,MAAM,IAC5C,cAAC,EAAD,CAAUK,KAAK,8CAA0BL,MAAM,QChBrDQ,EAAoBhB,IAAOC,IAAV,2TAuBRgB,I,EAAAA,EANf,YAAmC,IAAZC,EAAW,EAAXA,SACnB,OACI,cAACF,EAAD,UAAoBE,KClBtBC,EAAcC,YAAH,uDAcFC,MAZf,WACE,OACE,qCACE,cAACF,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,WCFOG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3b15d9f.chunk.js","sourcesContent":["// 이 컴포넌트는 오늘의 날짜와 요일을 보여주고, 앞으로 해야 할 일이 몇개 남았는지 보여줍니다.\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TodoheadBlock = styled.div`\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n\r\n    .task-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\nfunction TodoHead() {\r\n    return(\r\n        <TodoheadBlock>\r\n            <h1>2021년 05월 31일</h1>\r\n            <div className='day'>월요일</div>\r\n            <div className='task-left'>할 일 2개 남음</div>\r\n        </TodoheadBlock>\r\n    )\r\n}\r\n\r\nexport default TodoHead","// 각 할 일에 대한 정보를 렌더링해주는 컴포넌트입니다. \r\n// 좌측에 있는 원을 누르면 할 일의 완료 여부를 toggle 할 수 있습니다. \r\n// 할 일이 완료됐을 땐 좌측에 체크가 나타나고 텍스트의 색상이 연해집니다. \r\n// 그리고, 마우스를 올리면 휴지통 아이콘이 나타나고 이를 누르면 항목이 삭제됩니다.\r\nimport React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { MdDone, MdDelete } from 'react-icons/md'\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n    display: none;\r\n`\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            display: initial;\r\n        }\r\n    }\r\n`\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props => \r\n        props.done && css`\r\n            border: 1px solid #38d9a9;\r\n            color: #38d9a9;\r\n        `\r\n    }\r\n`\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 18px;\r\n    color: #495057;\r\n    ${props => \r\n        props.done && css`\r\n            color: #ced4da;\r\n        `\r\n    }\r\n`\r\n\r\nfunction TodoItem({id, done, text}) {\r\n    return(\r\n        <TodoItemBlock>\r\n            <CheckCircle done={done}>{done && <MdDone />}</CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove>\r\n                <MdDelete />\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    )\r\n}\r\n\r\nexport default TodoItem","// 이 컴포넌트는 할 일에 대한 정보가 들어있는 todos 배열을 내장함수 map 을 사용하여 \r\n// 여러개의 TodoItem 컴포넌트를 렌더링해줍니다.\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport TodoItem from './TodoItem'\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`\r\n\r\nfunction TodoList() {\r\n    return(\r\n        <TodoListBlock>\r\n            <TodoItem text='TodoTemplate 컴포넌트 생성하기' done={true} />\r\n            <TodoItem text='TodoHead 컴포넌트 생성하기' done={true} />\r\n            <TodoItem text='TodoList 컴포넌트 생성하기' done={true} />\r\n            <TodoItem text='TodoItem 컴포넌트 생성하기' done={true} />\r\n            <TodoItem text='TodoCreate 컴포넌트 생성하기' done={false} />\r\n            <TodoItem text='font-family global 적용하기' done={false} />\r\n        </TodoListBlock>\r\n    )\r\n}\r\n\r\nexport default TodoList","// 이 컴포넌트는 우리가 만들 투두리스트의 레이아웃을 설정하는 컴포넌트입니다. \r\n// 페이지의 중앙에 그림자가 적용된 흰색 박스를 보여줍니다.\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nfunction TodoTemplate({children}) {\r\n    return(\r\n        <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n    )\r\n}\r\n\r\nexport default TodoTemplate","import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport TodoHead from './Components/TodoHead'\nimport TodoList from './Components/TodoList'\nimport TodoTemplate from './Components/TodoTemplet'\n\nconst GlobalStyle = createGlobalStyle `body { background: #e9ecef; }`\n\nfunction App() {\n  return(\n    <>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n      </TodoTemplate>\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}